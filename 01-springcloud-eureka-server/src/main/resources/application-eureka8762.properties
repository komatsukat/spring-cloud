server.port=8762
#设置该服务注册中心的hostname
eureka.instance.hostname=eureka8762
#设置禁止该服务作为注册中心后还自己注册自己
#注册中心集群模式实现：将改值设置为false，表示不把我自己注册到我自身上，而是把自己作为注册中心节点之一向其他注册中心节点注册，
#其他注册中心节点也都一模一样的设置，然后当euraka客户端注册服务的时候，只要向任意一台注册中心节点注册了，这个注册中心节点都能向其他节点同步这个注册信息
#保证了以后如果一个节点出错，其他节点照样能够提供服务注册与发现、负载均衡等功能，而且就算只剩一个节点存活也照样可以提供服务。（AP原则）（zk是CP原则）
eureka.client.register-with-eureka=false
#设置不去检索其他服务，因为注册中心本身的指责是维护服务实例，而不是检索其他服务
eureka.client.fetch-registry=false
#指定注册中心的位置，将自己注册到其他注册中心节点上
eureka.client.service-url.defaultZone=http://eureka8761:8761/eureka/
#自我保护机制，开启自我保护机制后，如果客户端和eureka注册中心因为网络故障等因素没有保持心跳了，eureka也不会把这个服务给剔除，
#因为服务节点本身可能是好的，只是因为网络故障而不能发送心跳包了，所以这样可以保证消费者一直能拉取到服务提供者列表信息，
#从而能在不能心跳到情况下，也能正常远程调用，保证可用性。
#但是如果服务提供者节点故障掉了，同样也是发现不了的，这是就要有重试、断路器等机制保证可用性。
#eureka.server.enable-self-preservation=true

