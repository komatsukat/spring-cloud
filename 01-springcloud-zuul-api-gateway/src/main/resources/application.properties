server.port=6060
spring.application.name=01-springcloud-zuul-api-gateway

#配置路由规则，注意一套路由规则由path和service-id组成，两个签面的配置路径必须一致才能组成一套路由规则
#配置拦截路径
zuul.routes.api-asuka.path=/api-asuka/**
#配置路由转发到的服务名，服务的具体地址由eureka注册中心发现，这样，访问路径中带有/api-asuka/的请求，就会直接路由到该服务接口上
zuul.routes.api-asuka.service-id=01-springcloud-service-feign

#可以用下面一行配置代替
#zuul.routes.01-springcloud-service-feign=/api-asuka/**

#如果不配置路由规则，那么会根据访问路径，解析出该访问路径对应的默认路由规则
#比如访问路径为：http://localhost:6060/01-springcloud-service-feign/feign/getUser，如果不配置路由规则，那么默认的验证规则是：
#zuul.routes.01-springcloud-service-feign.path=/01-springcloud-service-feign/**
#zuul.routes.01-springcloud-service-feign.service-id=01-springcloud-service-feign

#默认请求下，zuul会为eureka上注册的所有服务生成默认的路由规则，但往往我们只需要对服务消费者进行路由，服务提供者是系统内部的，不需要路由
#这样可以采用下面这样不给服务提供者创建默认路由规则，这样 http://localhost:6060/01-springcloud-service-provider/service/user?token=123 的请求就不会被路由
zuul.ignored-services=01-springcloud-service-provider
#忽略一些路径
zuul.ignored-patterns=/**/abc/**
#要求访问路径添加前缀
#zuul.prefix=/myapi

#对于需要网关自己处理对业务请求，就要配置路由规则，匹配路径，并且转发到本地api
zuul.routes.gateway.path=/gateway/**
zuul.routes.gateway.url=forward:/api/local

#将自己注册到注册中心，以便进行服务列表到拉取和心跳
eureka.client.service-url.defaultZone=http://eureka8761:8761/eureka/,http://eureka8762:8762/eureka/

#禁用默认的error过滤器，通过自定error过滤器，在pre,routing,posh三个过滤器发生异常时，交给自定义error过滤器处理，并返回结果给浏览器
#zuul.SendErrorFilter.error.disable=true

#spring boot热部署开启
spring.devtools.restart.enabled=true